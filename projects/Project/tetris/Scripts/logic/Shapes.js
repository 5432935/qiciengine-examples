var Shapes = qc.Tetris.Shapes = {
    // 所有可能的形状
    tiles: [
        // 1个点的
        {
            value: 1,
            list: [[[0, 0]]]
        },

        {
            value: 2,
            list: [
                [[1, -1], [0, 0], [1, 0], [0, 1]],
                [[0, 0],  [1, 0], [-1, 1], [0, 1]],
                [[0, 0], [1, 0], [0, 1], [1, 1]]
            ]
        }, {
            value: 3,
            list: [
                [[0, -1], [0, 0], [0, 1], [0, 2]],
                [[0, 0], [1, -1], [-1, 1], [-2, 2]],
                [[-1, 0], [0, 0], [1, 0], [2, 0]]
            ]
        }, {
            value: 4,
            list: [
                [[0, 0], [0, 1], [0, -1], [-1, 0]],
                [[0, 0], [0, -1], [1, -1], [-1, 1]],
                [[0, 0], [0, 1], [0, -1], [1, 0]],
                [[0, 0], [1, 0], [-1, 0], [1, -1]],
                [[0, 0], [1, 0], [-1, 0], [-1, 1]]
            ]
        }, {
            value: 5,
            list: [
                [[0, 0], [0, 1], [0, -1], [1, -1]],
                [[0, 0], [1, -1], [-1, 1], [-1, 0]],
                [[0, 0], [1, -1], [-1, 1], [1, 0]],
                [[0, 0], [1, 0], [-1, 0], [0, -1]],
                [[0, 0], [1, 0], [-1, 0], [0, 1]]
            ]
        }, {
            value: 6,
            list: [
                [[0, -1], [-1, 0], [-1, 1], [0, 1]],
                [[-1, 0], [0, -1], [1, -1], [1, 0]],
                [[0, -1], [1, -1], [1, 0], [0, 1]],
                [[-1, 1], [0, 1], [1, 0], [1, -1]],
                [[-1, 0], [-1, 1], [0, -1], [1, -1]],
                [[-1, 0], [-1, 1], [0, 1], [1, 0]]
            ]
        }
    ],

    /**
     * 重新开始的逻辑
     */
    restart: function() {
        qc.Tetris.Shapes.pool = [];
        for (var i = 0; i < 3; i++) {
            qc.Tetris.Shapes.pool.push(qc.Tetris.Shapes.random());
        }
    },

    /**
     * 随机抽取一个形状
     */
    random: function() {
        // 先抽取分类
        var math = qc.Tetris.game.math;
        var shapes = Shapes.tiles;
        var shape = shapes[math.random(0, shapes.length - 1)];

        // 再抽子类
        var list = shape.list[math.random(0, shape.list.length - 1)];
        return {
            value: shape.value,
            list: list
        };
    },

    /**
     * 当前的pool数据
     */
    pool: []
};